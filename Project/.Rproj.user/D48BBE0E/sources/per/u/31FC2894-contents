# this package allowes us to get data from yahoo finance directly


install.packages('BatchGetSymbols')
library(BatchGetSymbols)

first.date <- Sys.Date() - 60
last.date <- Sys.Date()
freq.data <- 'daily'
# set tickers
tickers <- c('PLUG','ZM','NVAX','abcdef')

l.out <- BatchGetSymbols(tickers = tickers, 
                         first.date = first.date,
                         last.date = last.date, 
                         freq.data = freq.data,
                         cache.folder = file.path(tempdir(), 
                                                  'BGS_Cache') ) # cache in tempdir()
install.packages("ggplot2")
library(ggplot2)

p <- ggplot(l.out$df.tickers, aes(x = ref.date, y = price.close))
p <- p + geom_line()
p <- p + facet_wrap(~ticker, scales = 'free_y') 
print(p)


install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)

l.out$df.tickers$price.adjusted
is(l.out$df.tickers$price.adjusted)
l.out$df.tickers$ticker
portfolio_prices <- NULL
for(stock in stocks){
  portfolio_prices <- cbind(portfolio_prices, getSymbols.yahoo(stock, from = "2020-01-01", periodicity= "daily", auto.assign = FALSE)[,6])
}
colSums(is.na(portfolio_prices))
#to calculate the daily change in all of the stocks
portfolio_returns <- na.omit(ROC(portfolio_prices, weights = weight))
portfolio_return <- Return.portfolio(portfolio_returns)
?Return.portfolio
rownames(portfolio_return)
a <- ggplot(portfolio_return$portfolio.returns, aes(y = portfolio_returns))
print(a)
?Return.portfolio
#sharpe ratio for this portfolio with equal weight can be calculated with a in built function
SharpeRatio(portfolio_return, .035/252)
# for the project i want to optimize the weights that max out the sharpe ratio, 




install.packages("quantmod")
library(quantmod)


getSymbols('MSFT',src='yahoo')
setSymbolLookup(MSFT='yahoo')
# I am using the same three stocks I used in the exell project to see if the solver here gives a value
# as high as I got in exell

stocks <- c("PLUG", "ZM", "NVAX")
weight <- c(.3,.2,.5)
#
data(edhec)
View(edhec)
Return.portfolio(edhec["1997",1:5], rebalance_on="quarters")
Return.portfolio(edhec["1997",1:5], rebalance_on="quarters", verbose=TRUE)

getwd()



