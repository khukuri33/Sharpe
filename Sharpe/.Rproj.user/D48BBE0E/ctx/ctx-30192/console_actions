{
    "type": [
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2
    ],
    "data": [
        " 0.0400150075 -0.0118857592  0.0628130283 \n           ZM            ZM            ZM            ZM            ZM            ZM            ZM \n-0.0034745227 -0.0255454093  0.0289074785  0.0166298959 -0.0019981577  0.0155762051  0.0863100810 \n           ZM            ZM            ZM            ZM            ZM            ZM            ZM \n 0.4078437206 -0.0745701323 -0.0997261101 -0.0299748028 -0.0513936825  0.1104935831 -0.0132682743 \n           ZM            ZM            ZM            ZM            ZM            ZM ",
        "           ZM \n-0.0038493835  0.0535509399  0.0184134019 -0.0067406166  0.0121395175  0.0619788466  0.0677865413 \n           ZM            ZM            ZM            ZM            ZM            ZM            ZM \n 0.0515081114  0.0160982398 -0.0710246900  0.0677878366 -0.0178046244 -0.0454415040  0.0099032975 \n           ZM            ZM            ZM            ZM            ZM            ZM            ZM \n 0.0273978546 -0.0015734881  0.0065113824 -0.0146692113  0.0049346262 -0.0042862135  0.0289625250 \n           ZM ",
        "           ZM            ZM            ZM            ZM            ZM            ZM \n-0.0017668102  0.0554379471 -0.0183889019  0.0533137437  0.0421326901  0.0167084562 -0.0551078677 \n           ZM            ZM            ZM            ZM            ZM            ZM            ZM \n-0.0443745431  0.0143221340 -0.0173281388  0.0122575640  0.0409432645 -0.0426352630 -0.0510261749 \n           ZM            ZM            ZM            ZM            ZM            ZM            ZM \n-0.0587526332 -0.0171617104 -0.0032891611 ",
        " 0.0712941049  0.0269381821  0.0068044489 -0.1737017808 \n           ZM            ZM            ZM            ZM            ZM            ZM            ZM \n-0.0900928780  0.0992792346  0.0370155783 -0.0584640424 -0.0109767410  0.0062132307  0.0333889496 \n           ZM            ZM            ZM            ZM            ZM            ZM            ZM \n-0.0018070547  0.0610924629 -0.0212011075 -0.0063447314  0.0378201695  0.0628549174  0.0143126741 \n           ZM            ZM            ZM            ZM            ZM ",
        "           ZM            ZM \n-0.1506187584  0.0161206641  0.0016471056 -0.0085360519 -0.0052681738  0.0101752947 -0.0646602306 \n           ZM            ZM            ZM            ZM            ZM            ZM \n 0.0326967160 -0.0023871269 -0.0025692551  0.0086870959  0.0114413216 -0.0058911015 \n",
        "> ",
        "coor_value <- corelation(price_adjusted)",
        "Error in exp_return[, comb[i, 1]] : subscript out of bounds\n",
        "> ",
        "i <- c(\"ZM\",\"PLUG\")",
        "> ",
        "# So far",
        "> ",
        "weight <- c(\"NVAX\"= .2, \"ZM\" = .3, \"PLUG\"= .5)",
        "> ",
        "weight[\"NVAX\"] ",
        "NVAX \n 0.2 \n",
        "> ",
        "# need to max weight for the  ",
        "> ",
        "install.packages(\"lpSolve\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "library(lpSolve)",
        "> ",
        "install.packages(\"lpSolveAPI\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "library(lpSolveAPI)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "sharpe_ratio <- function(weight, st_dev, cor_ll, R_eturn, rf = 0){",
        "+ ",
        "  comb <- combinations(ncol(st_dev), 3, colnames(st_dev))",
        "+ ",
        "  e <- NULL",
        "+ ",
        "  f <- NULL",
        "+ ",
        "  ngy <- NULL",
        "+ ",
        "  names_cor <- NULL",
        "+ ",
        " ",
        "+ ",
        "  names_shrp <- NULL",
        "+ ",
        "  for (i in 1:nrow(comb)){",
        "+ ",
        "    sd_a <- st_dev[,comb[i,1]]",
        "+ ",
        "    sd_b <- st_dev[,comb[i,2]]",
        "+ ",
        "    sd_c <- st_dev[,comb[i,3]]",
        "+ ",
        "    weight_a <- weight[1]",
        "+ ",
        "    weight_b <- weight[2]",
        "+ ",
        "    weight_c <- weight[3]",
        "+ ",
        "    P_ab <- cor_ll[,paste(comb[i,1],comb[i,2])]",
        "+ ",
        "    P_ac <- cor_ll[,paste(comb[i,1],comb[i,3])]",
        "+ ",
        "    P_bc <- cor_ll[,paste(comb[i,2],comb[i,3])]",
        "+ ",
        "    var_portfolio <- (weight_a*weight_a*sd_a*sd_a)+(weight_b*weight_b*sd_b*sd_b)+(weight_c*weight_c*sd_c*sd_c)+(2*weight_a*weight_b*sd_a*sd_b*P_ab)+(2*weight_a*weight_c*sd_c*sd_a*P_ac)+(2*weight_b*weight_c*sd_c*sd_b*P_bc)",
        "+ ",
        "    R_eturn_a <- R_eturn[,comb[i,1]]",
        "+ ",
        "    R_eturn_b <- R_eturn[,comb[i,2]]",
        "+ ",
        "    R_eturn_c <- R_eturn[,comb[i,3]]",
        "+ ",
        "    ",
        "+ ",
        "    portfolio_return <- (R_eturn_a * weight_a)+ (R_eturn_b * weight_b)+(R_eturn_c*weight_c)",
        "+ ",
        "    Final_ratio <- (portfolio_return-rf)/sqrt(var_portfolio)",
        "+ ",
        "    e <- paste(comb[i,1],comb[i,2],comb[i,3])",
        "+ ",
        "    ngy <- cbind(ngy,i = Final_ratio)",
        "+ ",
        "    names_cor <- append(names_cor, e)",
        "+ ",
        "  ",
        "+ ",
        "  }",
        "+ ",
        "  colnames(ngy) <- names_cor",
        "+ ",
        "  return(ngy)",
        "+ ",
        "}",
        "> ",
        "FINAL <- sharpe_ratio(weight, sd, coor_value, R_Eturn)",
        "> ",
        "View(FINAL)",
        "> ",
        "price_adjusted <- price_adj(tickers)",
        "Error in dimnames(x) <- dn : \n  length of 'dimnames' [2] not equal to array extent\n",
        "In addition: ",
        "Warning message:\n",
        "In cbind(price_adjusted, tickers = data) :",
        "\n ",
        " number of rows of result is not a multiple of vector length (arg 2)\n",
        "> ",
        "price_adj <- function(tickers){",
        "+ ",
        "  price_adjusted = NULL",
        "+ ",
        "  for (i in tickers){",
        "+ ",
        "    ",
        "+ ",
        "    ",
        "+ ",
        "    bool = l.out$df.tickers$ticker == i",
        "+ ",
        "    data = l.out$df.tickers$price.adjusted[bool]",
        "+ ",
        "    price_adjusted <- cbind(price_adjusted, tickers = data)",
        "+ ",
        "    ",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "  return(price_adjusted)",
        "+ ",
        "}",
        "> ",
        "price_adjusted <- price_adj(tickers)",
        "Warning message:\n",
        "In cbind(price_adjusted, tickers = data) :",
        "\n ",
        " number of rows of result is not a multiple of vector length (arg 2)\n",
        "> ",
        "library(BatchGetSymbols)",
        "> ",
        "",
        "> ",
        "# Importing data from Yahoo finance, I am only doing 3 stocks right now, but once I have a good structure",
        "> ",
        "# I will feed the program all the 500 stocks from sp500 to get the highest possible sharpe ratio everyday.",
        "> ",
        "# only 3 datas for now",
        "> ",
        "first.date <- Sys.Date()-365",
        "> ",
        "last.date <- Sys.Date()",
        "> ",
        "df.SP500 <- GetSP500Stocks()",
        "> ",
        "df.SP500",
        "    Tickers                           Company SEC.filings            GICS.Sector\n1       MMM                        3M Company     reports            Industrials\n2       ABT               Abbott Laboratories     reports            Health Care\n3      ABBV                       AbbVie Inc.     reports            Health Care\n4      ABMD                       ABIOMED Inc     reports            Health Care\n5       ACN                     Accenture plc     reports Information Technology\n6      ATVI               Activision Blizzard",
        "     reports Communication Services\n7      ADBE                        Adobe Inc.     reports Information Technology\n8       AMD        Advanced Micro Devices Inc     reports Information Technology\n9       AAP                Advance Auto Parts     reports Consumer Discretionary\n10      AES                          AES Corp     reports              Utilities\n11      AFL                         AFLAC Inc     reports             Financials\n12        A          Agilent Technologies Inc     reports            Health Care",
        "\n13      APD      Air Products & Chemicals Inc     reports              Materials\n14     AKAM           Akamai Technologies Inc     reports Information Technology\n15      ALK              Alaska Air Group Inc     reports            Industrials\n16      ALB                    Albemarle Corp     reports              Materials\n17      ARE   Alexandria Real Estate Equities     reports            Real Estate\n18     ALXN           Alexion Pharmaceuticals     reports            Health Care\n19     ALGN                  Align Technology",
        "     reports            Health Care\n20     ALLE                          Allegion     reports            Industrials\n21      LNT               Alliant Energy Corp     reports              Utilities\n22      ALL                     Allstate Corp     reports             Financials\n23    GOOGL           Alphabet Inc. (Class A)     reports Communication Services\n24     GOOG           Alphabet Inc. (Class C)     reports Communication Services\n25       MO                  Altria Group Inc     reports       Consumer Staples",
        "\n26     AMZN                   Amazon.com Inc.     reports Consumer Discretionary\n27     AMCR                         Amcor plc     reports              Materials\n28      AEE                       Ameren Corp     reports              Utilities\n29      AAL           American Airlines Group     reports            Industrials\n30      AEP           American Electric Power     reports              Utilities\n31      AXP               American Express Co     reports             Financials\n32      AIG      American International Group",
        "     reports             Financials\n33      AMT              American Tower Corp.     reports            Real Estate\n34      AWK  American Water Works Company Inc     reports              Utilities\n35      AMP              Ameriprise Financial     reports             Financials\n36      ABC            AmerisourceBergen Corp     reports            Health Care\n37      AME                       AMETEK Inc.     reports            Industrials\n38     AMGN                        Amgen Inc.     reports            Health Care",
        "\n39      APH                     Amphenol Corp     reports Information Technology\n40      ADI              Analog Devices, Inc.     reports Information Technology\n41     ANSS                             ANSYS     reports Information Technology\n42     ANTM                            Anthem     reports            Health Care\n43      AON                           Aon plc     reports             Financials\n44      AOS                   A.O. Smith Corp     reports            Industrials\n45      APA                Apache Corporation",
        "     reports                 Energy\n46      AIV Apartment Investment & Management     reports            Real Estate\n47     AAPL                        Apple Inc.     reports Information Technology\n48     AMAT            Applied Materials Inc.     reports Information Technology\n49     APTV                         Aptiv PLC     reports Consumer Discretionary\n50      ADM         Archer-Daniels-Midland Co     reports       Consumer Staples\n51     ANET                   Arista Networks     reports Information Technology",
        "\n52      AJG         Arthur J. Gallagher & Co.     reports             Financials\n53      AIZ                          Assurant     reports             Financials\n54        T                         AT&T Inc.     reports Communication Services\n55      ATO                      Atmos Energy     reports              Utilities\n56     ADSK                     Autodesk Inc.     reports Information Technology\n57      ADP         Automatic Data Processing     reports Information Technology\n58      AZO                      AutoZone Inc",
        "     reports Consumer Discretionary\n59      AVB             AvalonBay Communities     reports            Real Estate\n60      AVY               Avery Dennison Corp     reports              Materials\n61      BKR                   Baker Hughes Co     reports                 Energy\n62      BLL                         Ball Corp     reports              Materials\n63      BAC              Bank of America Corp     reports             Financials\n64       BK       The Bank of New York Mellon     reports             Financials",
        "\n65      BAX         Baxter International Inc.     reports            Health Care\n66      BDX                  Becton Dickinson     reports            Health Care\n67    BRK.B                Berkshire Hathaway     reports             Financials\n68      BBY                 Best Buy Co. Inc.     reports Consumer Discretionary\n69      BIO              Bio-Rad Laboratories     reports            Health Care\n70     BIIB                       Biogen Inc.     reports            Health Care\n71      BLK                         BlackRock",
        "     reports             Financials\n72       BA                    Boeing Company     reports            Industrials\n73     BKNG              Booking Holdings Inc     reports Consumer Discretionary\n74      BWA                        BorgWarner     reports Consumer Discretionary\n75      BXP                 Boston Properties     reports            Real Estate\n76      BSX                 Boston Scientific     reports            Health Care\n77      BMY              Bristol-Myers Squibb     reports            Health Care",
        "\n78     AVGO                     Broadcom Inc.     reports Information Technology\n79       BR    Broadridge Financial Solutions     reports Information Technology\n80     BF.B                Brown-Forman Corp.     reports       Consumer Staples\n81     CHRW          C. H. Robinson Worldwide     reports            Industrials\n82      COG                   Cabot Oil & Gas     reports                 Energy\n83     CDNS            Cadence Design Systems     reports Information Technology\n84      CPB                     Campbell Soup",
        "     reports       Consumer Staples\n85      COF             Capital One Financial     reports             Financials\n86      CAH              Cardinal Health Inc.     reports            Health Care\n87      KMX                        Carmax Inc     reports Consumer Discretionary\n88      CCL                    Carnival Corp.     reports Consumer Discretionary\n89     CARR                    Carrier Global     reports            Industrials\n90     CTLT                          Catalent     reports            Health Care",
        "\n91      CAT                  Caterpillar Inc.     reports            Industrials\n92     CBOE               Cboe Global Markets     reports             Financials\n93     CBRE                        CBRE Group     reports            Real Estate\n94      CDW                               CDW     reports Information Technology\n95       CE                          Celanese     reports              Materials\n96      CNC               Centene Corporation     reports            Health Care\n97      CNP                CenterPoint Energy",
        "     reports              Utilities\n98     CERN                            Cerner     reports            Health Care\n99       CF        CF Industries Holdings Inc     reports              Materials\n100    SCHW        Charles Schwab Corporation     reports             Financials\n101    CHTR            Charter Communications     reports Communication Services\n102     CVX                     Chevron Corp.     reports                 Energy\n103     CMG            Chipotle Mexican Grill     reports Consumer Discretionary",
        "\n104      CB                     Chubb Limited     reports             Financials\n105     CHD                   Church & Dwight     reports       Consumer Staples\n106      CI                       CIGNA Corp.     reports            Health Care\n107    CINF              Cincinnati Financial     reports             Financials\n108    CTAS                Cintas Corporation     reports            Industrials\n109    CSCO                     Cisco Systems     reports Information Technology\n110       C                    Citigroup Inc.",
        "     reports             Financials\n111     CFG          Citizens Financial Group     reports             Financials\n                               GICS.Sub.Industry                      HQ.Location\n1                       Industrial Conglomerates              St. Paul, Minnesota\n2                          Health Care Equipment          North Chicago, Illinois\n3                                Pharmaceuticals          North Chicago, Illinois\n4                          Health Care Equipment           Danvers, Massachusetts",
        "\n5                 IT Consulting & Other Services                  Dublin, Ireland\n6                 Interactive Home Entertainment         Santa Monica, California\n7                           Application Software             San Jose, California\n8                                 Semiconductors          Santa Clara, California\n9                              Automotive Retail          Raleigh, North Carolina\n10  Independent Power Producers & Energy Traders              Arlington, Virginia\n11                       Life & Health Insurance",
        "                Columbus, Georgia\n12                         Health Care Equipment          Santa Clara, California\n13                              Industrial Gases          Allentown, Pennsylvania\n14            Internet Services & Infrastructure         Cambridge, Massachusetts\n15                                      Airlines              Seattle, Washington\n16                           Specialty Chemicals        Charlotte, North Carolina\n17                                  Office REITs             Pasadena, California",
        "\n18                                 Biotechnology            Boston, Massachusetts\n19                          Health Care Supplies             San Jose, California\n20                             Building Products                  Dublin, Ireland\n21                            Electric Utilities               Madison, Wisconsin\n22                 Property & Casualty Insurance    Northfield Township, Illinois\n23                  Interactive Media & Services        Mountain View, California\n24                  Interactive Media & Services",
        "        Mountain View, California\n25                                       Tobacco               Richmond, Virginia\n26            Internet & Direct Marketing Retail              Seattle, Washington\n27                               Paper Packaging Warmley, Bristol, United Kingdom\n28                               Multi-Utilities              St. Louis, Missouri\n29                                      Airlines                Fort Worth, Texas\n30                            Electric Utilities                   Columbus, Ohio",
        "\n31                              Consumer Finance               New York, New York\n32                 Property & Casualty Insurance               New York, New York\n33                             Specialized REITs            Boston, Massachusetts\n34                               Water Utilities               Camden, New Jersey\n35              Asset Management & Custody Banks           Minneapolis, Minnesota\n36                      Health Care Distributors       Chesterbrook, Pennsylvania\n37             Electrical Components & Equipment",
        "             Berwyn, Pennsylvania\n38                                 Biotechnology        Thousand Oaks, California\n39                         Electronic Components         Wallingford, Connecticut\n40                                Semiconductors           Norwood, Massachusetts\n41                          Application Software         Canonsburg, Pennsylvania\n42                           Managed Health Care            Indianapolis, Indiana\n43                             Insurance Brokers           London, United Kingdom",
        "\n44                             Building Products             Milwaukee, Wisconsin\n45            Oil & Gas Exploration & Production                   Houston, Texas\n46                             Residential REITs                 Denver, Colorado\n47    Technology Hardware, Storage & Peripherals            Cupertino, California\n48                       Semiconductor Equipment          Santa Clara, California\n49                        Auto Parts & Equipment                  Dublin, Ireland\n50                         Agricultural Products",
        "                Chicago, Illinois\n51                      Communications Equipment          Santa Clara, California\n52                             Insurance Brokers                 Itasca, Illinois\n53                          Multi-line Insurance               New York, New York\n54         Integrated Telecommunication Services                    Dallas, Texas\n55                                 Gas Utilities                    Dallas, Texas\n56                          Application Software           San Rafael, California",
        "\n57            Internet Services & Infrastructure             Roseland, New Jersey\n58                              Specialty Stores               Memphis, Tennessee\n59                             Residential REITs           Arlington, Virginia[3]\n60                               Paper Packaging             Glendale, California\n61                Oil & Gas Equipment & Services                   Houston, Texas\n62                      Metal & Glass Containers             Broomfield, Colorado\n63                             Diversified Banks",
        "        Charlotte, North Carolina\n64              Asset Management & Custody Banks               New York, New York\n65                         Health Care Equipment              Deerfield, Illinois\n66                         Health Care Equipment       Franklin Lakes, New Jersey\n67                         Multi-Sector Holdings                  Omaha, Nebraska\n68                 Computer & Electronics Retail             Richfield, Minnesota\n69                Life Sciences Tools & Services             Hercules, California",
        "\n70                                 Biotechnology         Cambridge, Massachusetts\n71              Asset Management & Custody Banks               New York, New York\n72                           Aerospace & Defense                Chicago, Illinois\n73            Internet & Direct Marketing Retail             Norwalk, Connecticut\n74                        Auto Parts & Equipment           Auburn Hills, Michigan\n75                                  Office REITs            Boston, Massachusetts\n76                         Health Care Equipment",
        "    Marlborough, Massachusetts[4]\n77                      Health Care Distributors               New York, New York\n78                                Semiconductors             San Jose, California\n79         Data Processing & Outsourced Services           Lake Success, New York\n80                         Distillers & Vintners             Louisville, Kentucky\n81                       Air Freight & Logistics          Eden Prairie, Minnesota\n82            Oil & Gas Exploration & Production                   Houston, Texas",
        "\n83                          Application Software             San Jose, California\n84                        Packaged Foods & Meats               Camden, New Jersey\n85                              Consumer Finance          Tysons Corner, Virginia\n86                      Health Care Distributors                     Dublin, Ohio\n87                              Specialty Stores               Richmond, Virginia\n88                Hotels, Resorts & Cruise Lines                   Miami, Florida\n89                             Building Products",
        "      Palm Beach Gardens, Florida\n90                               Pharmaceuticals             Somerset, New Jersey\n91         Construction Machinery & Heavy Trucks              Deerfield, Illinois\n92                    Financial Exchanges & Data                Chicago, Illinois\n93                          Real Estate Services          Los Angeles, California\n94                       Technology Distributors           Lincolnshire, Illinois\n95                           Specialty Chemicals                    Irving, Texas",
        "\n96                           Managed Health Care              St. Louis, Missouri\n97                               Multi-Utilities                   Houston, Texas\n98                        Health Care Technology      North Kansas City, Missouri\n99          Fertilizers & Agricultural Chemicals              Deerfield, Illinois\n100               Investment Banking & Brokerage        San Francisco, California\n101                            Cable & Satellite            Stamford, Connecticut\n102                         Integrated Oil & Gas",
        "            San Ramon, California\n103                                  Restaurants        Newport Beach, California\n104                Property & Casualty Insurance              Zurich, Switzerland\n105                           Household Products                Ewing, New Jersey\n106                          Managed Health Care          Bloomfield, Connecticut\n107                Property & Casualty Insurance                  Fairfield, Ohio\n108                 Diversified Support Services                      Mason, Ohio",
        "\n109                     Communications Equipment             San Jose, California\n110                            Diversified Banks               New York, New York\n111                               Regional Banks         Providence, Rhode Island\n           Date.First.Added     CIK            Founded\n1                1976-08-09   66740               1902\n2                1964-03-31    1800               1888\n3                2012-12-31 1551152        2013 (1888)\n4                2018-05-31  815094               1981",
        "\n5                2011-07-06 1467373               1989\n6                2015-08-31  718877               2008\n7                1997-05-05  796343               1982\n8                2017-03-20    2488               1969\n9                2015-07-09 1158449               1932\n10               1998-10-02  874761               1981\n11               1999-05-28    4977               1955\n12               2000-06-05 1090872               1999\n13               1985-04-30    2969               1940\n14               2007-07-12",
        " 1086222               1998\n15               2016-05-13  766421               1985\n16               2016-07-01  915913               1994\n17               2017-03-20 1035443               1994\n18               2012-05-25  899866               1992\n19               2017-06-19 1097149               1997\n20               2013-12-02 1579241               1908\n21               2016-07-01  352541               1917\n22               1995-07-13  899051               1931\n23               2014-04-03 1652044               1998",
        "\n24               2006-04-03 1652044               1998\n25               1957-03-04  764180               1985\n26               2005-11-18 1018724               1994\n27               2019-06-07 1748790        2019 (1860)\n28               1991-09-19 1002910               1902\n29               2015-03-23    6201               1934\n30               1957-03-04    4904               1906\n31               1976-06-30    4962               1850\n32               1980-03-31    5272               1919\n33               2007-11-19",
        " 1053507               1995\n34               2016-03-04 1410636               1886\n35               2005-10-03  820027               1894\n36               2001-08-30 1140859               1985\n37               2013-09-23 1037868               1930\n38               1992-01-02  318154               1980\n39               2008-09-30  820313               1932\n40               1999-10-12    6281               1965\n41               2017-06-19 1013462               1969\n42               2002-07-25 1156039        2014 (1946)",
        "\n43               1996-04-23  315293        1982 (1919)\n44               2017-07-26   91142               1916\n45               1997-07-28    6769               1954\n46               2003-03-14  922864        1994 (1975)\n47               1982-11-30  320193               1977\n48               1995-03-16    6951               1967\n49               2012-12-24 1521332               1994\n50               1981-07-29    7084               1902\n51               2018-08-28 1596532               2004\n52               2016-05-31",
        "  354190               1927\n53               2007-04-10 1267238               1892\n54  1983-11-30 (1957-03-04)  732717        1983 (1885)\n55               2019-02-15  731802               1906\n56               1989-12-01  769397               1982\n57               1981-03-31    8670               1949\n58               1997-01-02  866787               1979\n59               2007-01-10  915912               1978\n60               1987-12-31    8818               1990\n61               2017-07-07 1701605               2017",
        "\n62               1984-10-31    9389               1880\n63               1976-06-30   70858 1998 (1923 / 1874)\n64               1995-03-31 1390777               1784\n65               1972-09-30   10456               1931\n66               1972-09-30   10795               1897\n67               2010-02-16 1067983               1839\n68               1999-06-29  764478               1966\n69               2020-06-22   12208               1952\n70               2003-11-13  875045               1978\n71               2011-04-04",
        " 1364742               1988\n72               1957-03-04   12927               1916\n73               2009-11-06 1075531               1996\n74               2011-12-19  908255               1880\n75               2006-04-03 1037540               1970\n76               1995-02-24  885725               1979\n77               1957-03-04   14272               1989\n78               2014-05-08 1730168               1961\n79               2018-06-18 1383312               1962\n80               1982-10-31   14693               1870",
        "\n81               2007-03-02 1043277               1905\n82               2008-06-23  858470               1989\n83               2017-09-18  813672               1988\n84               1957-03-04   16732               1869\n85               1998-07-01  927628               1935\n86               1997-05-27  721371               1971\n87               2010-06-28 1170010               1993\n88               1998-12-22  815097               1972\n89               2020-04-03 1783180        2020 (1915)\n90               2020-09-21",
        " 1596783               2007\n91               1957-03-04   18230               1925\n92               2017-03-01 1374310               1973\n93               2006-11-10 1138118               1906\n94               2019-09-23 1402057               1984\n95               2018-12-24 1306830               1918\n96               2016-03-30 1071739               1984\n97               1985-07-31 1130310               1882\n98               2010-04-30  804753               1979\n99               2008-08-27 1324404               1946",
        "\n100              1997-06-02  316709               1971\n101              2016-09-08 1091667               1993\n102              1957-03-04   93410               1879\n103              2011-04-28 1058090               1993\n104              2010-07-15  896159               1985\n105              2015-12-29  313927               1847\n106              1976-06-30 1739940               1982\n107              1997-12-18   20286               1950\n108              2001-03-01  723254               1929\n109              1993-12-01",
        "  858877               1984\n110              1988-05-31  831001               1998\n111              2016-01-29  759944               1828\n [ reached 'max' / getOption(\"max.print\") -- omitted 394 rows ]\n",
        "> ",
        "tickers <- df.SP500$Tickers[1:100]",
        "> ",
        "tickers",
        "  [1] \"MMM\"   \"ABT\"   \"ABBV\"  \"ABMD\"  \"ACN\"   \"ATVI\"  \"ADBE\"  \"AMD\"   \"AAP\"   \"AES\"   \"AFL\"   \"A\"    \n [13] \"APD\"   \"AKAM\"  \"ALK\"   \"ALB\"   \"ARE\"   \"ALXN\"  \"ALGN\"  \"ALLE\"  \"LNT\"   \"ALL\"   \"GOOGL\" \"GOOG\" \n [25] \"MO\"    \"AMZN\"  \"AMCR\"  \"AEE\"   \"AAL\"   \"AEP\"   \"AXP\"   \"AIG\"   \"AMT\"   \"AWK\"   \"AMP\"   \"ABC\"  \n [37] \"AME\"   \"AMGN\"  \"APH\"   \"ADI\"   \"ANSS\"  \"ANTM\"  \"AON\"   \"AOS\"   \"APA\"   \"AIV\"   \"AAPL\"  \"AMAT\" \n [49] \"APTV\"  \"ADM\"   \"ANET\"  \"AJG\"   \"AIZ\"   \"T\"     \"ATO\"   \"ADSK\"  \"ADP\"   \"AZO\"   \"AVB\"   \"AVY\"  \n [61]",
        " \"BKR\"   \"BLL\"   \"BAC\"   \"BK\"    \"BAX\"   \"BDX\"   \"BRK.B\" \"BBY\"   \"BIO\"   \"BIIB\"  \"BLK\"   \"BA\"   \n [73] \"BKNG\"  \"BWA\"   \"BXP\"   \"BSX\"   \"BMY\"   \"AVGO\"  \"BR\"    \"BF.B\"  \"CHRW\"  \"COG\"   \"CDNS\"  \"CPB\"  \n [85] \"COF\"   \"CAH\"   \"KMX\"   \"CCL\"   \"CARR\"  \"CTLT\"  \"CAT\"   \"CBOE\"  \"CBRE\"  \"CDW\"   \"CE\"    \"CNC\"  \n [97] \"CNP\"   \"CERN\"  \"CF\"    \"SCHW\" \n",
        "> ",
        "l.out <- BatchGetSymbols(tickers = tickers,",
        "+ ",
        "                         first.date = first.date,",
        "+ ",
        "                         last.date = last.date)",
        "\nRunning BatchGetSymbols for:",
        "\n   tickers =MMM, ABT, ABBV, ABMD, ACN, ATVI, ADBE, AMD, AAP, AES, AFL, A, APD, AKAM, ALK, ALB, ARE, ALXN, ALGN, ALLE, LNT, ALL, GOOGL, GOOG, MO, AMZN, AMCR, AEE, AAL, AEP, AXP, AIG, AMT, AWK, AMP, ABC, AME, AMGN, APH, ADI, ANSS, ANTM, AON, AOS, APA, AIV, AAPL, AMAT, APTV, ADM, ANET, AJG, AIZ, T, ATO, ADSK, ADP, AZO, AVB, AVY, BKR, BLL, BAC, BK, BAX, BDX, BRK.B, BBY, BIO, BIIB, BLK, BA, BKNG, BWA, BXP, BSX, BMY, AVGO, BR, BF.B, CHRW, COG, CDNS, CPB, COF, CAH, KMX, CCL, CARR, CTLT, CAT, CBOE, CBRE, CDW, CE, CNC, CNP, CERN, CF, SCHW",
        "\n   Downloading data for benchmark ticker",
        "\n^GSPC | yahoo (1|1)",
        " | Found cache file",
        "\nMMM | yahoo (1|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good job!",
        "\nABT | yahoo (2|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good job!",
        "\nABBV | yahoo (3|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Well done!",
        "\nABMD | yahoo (4|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Well done!",
        "\nACN | yahoo (5|100)",
        " | Found cache file",
        " - Got 100% of valid prices | OK!",
        "\nATVI | yahoo (6|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Feels good!",
        "\nADBE | yahoo (7|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Feels good!",
        "\nAMD | yahoo (8|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good job!",
        "\nAAP | yahoo (9|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Mas bah tche, que coisa linda!",
        "\nAES | yahoo (10|100)",
        " | Found cache file",
        " - Got 100% of valid prices | You got it!",
        "\nAFL | yahoo (11|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Looking good!",
        "\nA | yahoo (12|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Looking good!",
        "\nAPD | yahoo (13|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Well done!",
        "\nAKAM | yahoo (14|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Got it!",
        "\nALK | yahoo (15|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Mas bah tche, que coisa linda!",
        "\nALB | yahoo (16|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Nice!",
        "\nARE | yahoo (17|100)",
        " | Found cache file",
        " - Got 100% of valid prices | OK!",
        "\nALXN | yahoo (18|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Nice!",
        "\nALGN | yahoo (19|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Well done!",
        "\nALLE | yahoo (20|100)",
        " | Found cache file",
        " - Got 100% of valid prices | OK!",
        "\nLNT | yahoo (21|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good job!",
        "\nALL | yahoo (22|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Well done!",
        "\nGOOGL | yahoo (23|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Nice!",
        "\nGOOG | yahoo (24|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Well done!",
        "\nMO | yahoo (25|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Got it!",
        "\nAMZN | yahoo (26|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Feliz que nem lambari de sanga!",
        "\nAMCR | yahoo (27|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Feliz que nem lambari de sanga!",
        "\nAEE | yahoo (28|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good stuff!",
        "\nAAL | yahoo (29|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Feels good!",
        "\nAEP | yahoo (30|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Looking good!",
        "\nAXP | yahoo (31|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good stuff!",
        "\nAIG | yahoo (32|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Youre doing good!",
        "\nAMT | yahoo (33|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Mais faceiro que guri de bombacha nova!",
        "\nAWK | yahoo (34|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good stuff!",
        "\nAMP | yahoo (35|100)",
        " | Found cache file",
        " - Got 100% of valid prices | OK!",
        "\nABC | yahoo (36|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Feels good!",
        "\nAME | yahoo (37|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Youre doing good!",
        "\nAMGN | yahoo (38|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Youre doing good!",
        "\nAPH | yahoo (39|100)",
        " | Found cache file",
        " - Got 100% of valid prices | You got it!",
        "\nADI | yahoo (40|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good stuff!",
        "\nANSS | yahoo (41|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Nice!",
        "\nANTM | yahoo (42|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Well done!",
        "\nAON | yahoo (43|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Nice!",
        "\nAOS | yahoo (44|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good job!",
        "\nAPA | yahoo (45|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good stuff!",
        "\nAIV | yahoo (46|100)",
        " | Found cache file",
        " - Got 100% of valid prices | You got it!",
        "\nAAPL | yahoo (47|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Feliz que nem lambari de sanga!",
        "\nAMAT | yahoo (48|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Well done!",
        "\nAPTV | yahoo (49|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good job!",
        "\nADM | yahoo (50|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good job!",
        "\nANET | yahoo (51|100)",
        " | Found cache file",
        " - Got 100% of valid prices | OK!",
        "\nAJG | yahoo (52|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good stuff!",
        "\nAIZ | yahoo (53|100)",
        " | Found cache file",
        " - Got 100% of valid prices | OK!",
        "\nT | yahoo (54|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Well done!",
        "\nATO | yahoo (55|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good stuff!",
        "\nADSK | yahoo (56|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good job!",
        "\nADP | yahoo (57|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good stuff!",
        "\nAZO | yahoo (58|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Looking good!",
        "\nAVB | yahoo (59|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good job!",
        "\nAVY | yahoo (60|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Nice!",
        "\nBKR | yahoo (61|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Mas bah tche, que coisa linda!",
        "\nBLL | yahoo (62|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Well done!",
        "\nBAC | yahoo (63|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good stuff!",
        "\nBK | yahoo (64|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Looking good!",
        "\nBAX | yahoo (65|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good job!",
        "\nBDX | yahoo (66|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Youre doing good!",
        "\nBRK.B | yahoo (67|100)",
        " | Not Cached",
        " - Error in download..",
        "\nBBY | yahoo (68|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Mais faceiro que guri de bombacha nova!",
        "\nBIO | yahoo (69|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Looking good!",
        "\nBIIB | yahoo (70|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good stuff!",
        "\nBLK | yahoo (71|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Nice!",
        "\nBA | yahoo (72|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Well done!",
        "\nBKNG | yahoo (73|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Nice!",
        "\nBWA | yahoo (74|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Nice!",
        "\nBXP | yahoo (75|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Got it!",
        "\nBSX | yahoo (76|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Well done!",
        "\nBMY | yahoo (77|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good stuff!",
        "\nAVGO | yahoo (78|100)",
        " | Found cache file",
        " - Got 100% of valid prices | OK!",
        "\nBR | yahoo (79|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Well done!",
        "\nBF.B | yahoo (80|100)",
        " | Not Cached",
        " - Error in download..",
        "\nCHRW | yahoo (81|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Youre doing good!",
        "\nCOG | yahoo (82|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Well done!",
        "\nCDNS | yahoo (83|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Feels good!",
        "\nCPB | yahoo (84|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good job!",
        "\nCOF | yahoo (85|100)",
        " | Found cache file",
        " - Got 100% of valid prices | You got it!",
        "\nCAH | yahoo (86|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Feels good!",
        "\nKMX | yahoo (87|100)",
        " | Found cache file",
        " - Got 100% of valid prices | You got it!",
        "\nCCL | yahoo (88|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Feels good!",
        "\nCARR | yahoo (89|100)",
        " | Found cache file",
        " - Got 76% of valid prices | Got it!",
        "\nCTLT | yahoo (90|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Well done!",
        "\nCAT | yahoo (91|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Got it!",
        "\nCBOE | yahoo (92|100)",
        " | Found cache file",
        " - Got 100% of valid prices | You got it!",
        "\nCBRE | yahoo (93|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Well done!",
        "\nCDW | yahoo (94|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good stuff!",
        "\nCE | yahoo (95|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Boa!",
        "\nCNC | yahoo (96|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Looking good!",
        "\nCNP | yahoo (97|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Good job!",
        "\nCERN | yahoo (98|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Nice!",
        "\nCF | yahoo (99|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Nice!",
        "\nSCHW | yahoo (100|100)",
        " | Found cache file",
        " - Got 100% of valid prices | Youre doing good!",
        "Warning messages:\n",
        "1: closing unused connection 3 (https://query1.finance.yahoo.com/v7/finance/download/BRK.B?period1=1576713600&period2=1608249600&interval=1d&events=history&crumb=4ESERf47qZ6) \n",
        "2: closing unused connection 3 (https://query1.finance.yahoo.com/v7/finance/download/BF.B?period1=1576713600&period2=1608249600&interval=1d&events=history&crumb=fSRmvwxV043) \n",
        "> ",
        "",
        "> ",
        "print(l.out$df.control)",
        "\u001B[38;5;246m# A tibble: 98 x 6\u001B[39m\n   ticker src   download.status total.obs perc.benchmark.dates threshold.decision\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m               \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m                \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m             \n\u001B[38;5;250m 1\u001B[39m MMM    yahoo OK                    252                    1 KEEP              \n\u001B[38;5;250m 2\u001B[39m ABT    yahoo OK                    252                    1 KEEP              \n\u001B[38;5;250m 3\u001B[39m ABBV   yahoo OK                    252                    1 KEEP              \n\u001B[38;5;250m 4\u001B[39m ABMD   yahoo OK                    252                    1 KEEP              \n\u001B[38;5;250m 5\u001B[39m ACN    yahoo OK                    252                    1 KEEP              \n\u001B[38;5;250m 6\u001B[39m ATVI   yahoo OK                    252                    1 KEEP              \n\u001B[38;5;250m 7\u001B[39m ADBE   yahoo OK                    252                    1 KEEP              \n\u001B[38;5;250m 8\u001B[39m AMD    yahoo OK                    252                    1 KEEP              \n\u001B[38;5;250m 9\u001B[39m AAP    yahoo OK                    252                    1 KEEP              \n\u001B[38;5;250m10\u001B[39m AES    yahoo OK                    252                    1 KEEP              \n\u001B[38;5;246m# ... with 88 more rows\u001B[39m",
        "\n",
        "> ",
        "print(l.out$df.tickers)",
        "    price.open price.high price.low price.close   volume price.adjusted   ref.date ticker\n1       169.62     172.58    169.15      172.15  2757600       165.9700 2019-12-19    MMM\n2       174.79     175.47    172.20      175.37  7513000       169.0744 2019-12-20    MMM\n3       176.71     179.18    176.56      178.47  4876300       172.0632 2019-12-23    MMM\n4       178.27     178.67    176.04      176.68  1259500       170.3374 2019-12-24    MMM\n5       176.45     176.66    175.50      176.59  1435200       170.2507",
        " 2019-12-26    MMM\n6       176.65     177.54    175.62      177.26  1472900       170.8966 2019-12-27    MMM\n7       177.26     178.96    175.59      175.83  1715100       169.5179 2019-12-30    MMM\n8       175.23     176.59    175.07      176.42  1573500       170.0868 2019-12-31    MMM\n9       177.68     180.01    177.14      180.00  3601700       173.5382 2020-01-02    MMM\n10      177.02     178.66    175.63      178.45  2466900       172.0439 2020-01-03    MMM\n11      177.15     178.71    176.35      178.62",
        "  1998000       172.2078 2020-01-06    MMM\n12      178.28     178.51    176.82      177.90  2173000       171.5136 2020-01-07    MMM\n13      178.00     181.50    177.65      180.63  2758300       174.1456 2020-01-08    MMM\n14      181.51     181.59    179.76      181.20  2746300       174.6952 2020-01-09    MMM\n15      181.61     182.18    180.14      180.47  2103800       173.9914 2020-01-10    MMM\n16      180.94     182.23    180.36      180.92  2090800       174.4252 2020-01-13    MMM\n17      180.92     182.55",
        "    180.21      181.37  2911200       174.8591 2020-01-14    MMM\n18      181.42     181.86    179.18      179.78  2482200       173.3261 2020-01-15    MMM\n19      180.68     181.20    179.69      181.01  2149900       174.5120 2020-01-16    MMM\n20      181.00     182.15    180.70      181.35  3690100       174.8398 2020-01-17    MMM\n21      181.85     181.91    178.63      179.39  3367700       172.9501 2020-01-21    MMM\n22      179.51     180.57    177.88      178.03  2420200       171.6390 2020-01-22    MMM",
        "\n23      177.07     178.44    176.39      177.74  2358400       171.3594 2020-01-23    MMM\n24      178.49     179.81    177.53      178.15  2643100       171.7547 2020-01-24    MMM\n25      179.86     180.59    175.54      175.63  4361400       169.3251 2020-01-27    MMM\n26      171.90     172.34    165.05      165.58  8920700       159.6359 2020-01-28    MMM\n27      166.35     166.47    161.53      162.00  5343900       156.1844 2020-01-29    MMM\n28      161.00     162.64    158.76      162.51  4357100       156.6761",
        " 2020-01-30    MMM\n29      162.00     162.65    158.23      158.66  5740300       152.9643 2020-01-31    MMM\n30      160.03     160.31    156.38      156.59  3927100       150.9686 2020-02-03    MMM\n31      159.77     159.96    157.00      157.24  4363900       151.5953 2020-02-04    MMM\n32      159.12     162.33    158.70      162.33  3118200       156.5026 2020-02-05    MMM\n33      164.49     165.00    162.47      162.89  3413800       157.0425 2020-02-06    MMM\n34      161.41     161.92    159.63      160.08",
        "  2736200       154.3333 2020-02-07    MMM\n35      160.21     161.26    158.87      160.15  2754800       154.4008 2020-02-10    MMM\n36      161.00     162.52    160.02      162.45  2275100       156.6183 2020-02-11    MMM\n37      164.24     165.04    163.57      163.80  2736400       157.9198 2020-02-12    MMM\n38      161.76     161.87    159.00      159.76  3413900       155.4196 2020-02-13    MMM\n39      159.85     161.14    158.82      161.01  2233500       156.6357 2020-02-14    MMM\n40      160.36     160.53",
        "    158.04      158.88  2478900       154.5636 2020-02-18    MMM\n41      159.08     160.47    158.36      159.34  2296400       155.0110 2020-02-19    MMM\n42      159.00     161.39    158.50      158.56  3275100       154.2522 2020-02-20    MMM\n43      158.33     158.59    156.12      156.93  3535300       152.6665 2020-02-21    MMM\n44      154.45     154.71    152.22      152.55  3635600       148.4055 2020-02-24    MMM\n45      153.31     153.44    145.97      146.85  5263400       142.8604 2020-02-25    MMM",
        "\n46      149.57     151.82    148.09      148.96  5152100       144.9131 2020-02-26    MMM\n47      151.23     155.43    149.00      150.16  8241600       146.0804 2020-02-27    MMM\n48      154.09     156.72    146.00      149.24 11508700       145.1854 2020-02-28    MMM\n49      151.34     153.43    148.37      153.02  8026300       148.8627 2020-03-02    MMM\n50      152.44     154.00    144.44      145.24  8296500       141.2941 2020-03-03    MMM\n51      147.02     154.00    145.99      153.98  5773800       149.7967",
        " 2020-03-04    MMM\n52      150.80     154.35    149.55      151.41  5887000       147.2965 2020-03-05    MMM\n53      149.59     154.74    147.87      153.65  7155100       149.4756 2020-03-06    MMM\n54      146.59     149.46    143.55      144.06  8194400       140.1462 2020-03-09    MMM\n55      149.02     153.38    144.88      153.30  5651700       149.1351 2020-03-10    MMM\n56      149.73     149.73    146.47      147.24  4748200       143.2398 2020-03-11    MMM\n57      139.96     141.71    130.34      133.58",
        "  8215800       129.9509 2020-03-12    MMM\n58      141.01     141.69    131.00      141.68  6580300       137.8308 2020-03-13    MMM\n59      129.86     135.50    128.01      130.91  7440800       127.3534 2020-03-16    MMM\n60      131.94     136.77    129.61      134.44  6535400       130.7875 2020-03-17    MMM\n61      128.46     139.37    128.39      137.02  6860400       133.2974 2020-03-18    MMM\n62      137.71     140.18    132.93      137.51  6365700       133.7741 2020-03-19    MMM\n63      138.07     139.24",
        "    122.71      124.89  9589200       121.4970 2020-03-20    MMM\n64      128.16     128.40    114.04      117.87  7934300       114.6677 2020-03-23    MMM\n65      122.29     133.45    121.00      132.72  9311700       129.1143 2020-03-24    MMM\n66      133.15     134.69    126.80      131.54  7742500       127.9663 2020-03-25    MMM\n67      131.79     136.38    130.61      136.18  6717000       132.4803 2020-03-26    MMM\n68      132.83     137.07    130.91      133.24  4262300       129.6201 2020-03-27    MMM",
        "\n69      132.25     138.01    131.06      137.74  3869500       133.9979 2020-03-30    MMM\n70      135.69     139.44    135.68      136.51  3613700       132.8013 2020-03-31    MMM\n71      132.00     135.84    131.01      133.14  3777600       129.5228 2020-04-01    MMM\n72      132.36     138.21    132.10      137.91  3990300       134.1633 2020-04-02    MMM\n73      136.01     137.44    132.90      133.79  3588300       130.1552 2020-04-03    MMM\n74      137.86     141.25    136.90      140.70  5639700       136.8775",
        " 2020-04-06    MMM\n75      147.50     150.64    144.40      144.60  5496300       140.6715 2020-04-07    MMM\n76      145.73     149.72    143.91      148.99  3071100       144.9422 2020-04-08    MMM\n77      148.46     149.73    146.54      147.78  4784200       143.7651 2020-04-09    MMM\n78      147.50     148.58    145.30      146.40  2642300       142.4226 2020-04-13    MMM\n79      149.62     150.98    148.05      150.14  3318400       146.0610 2020-04-14    MMM\n80      148.19     148.55    144.90      145.16",
        "  3043900       141.2163 2020-04-15    MMM\n81      145.27     146.45    143.23      144.90  4170400       140.9633 2020-04-16    MMM\n82      147.44     148.50    144.80      146.46  5393100       142.4810 2020-04-17    MMM\n83      144.75     147.02    143.65      143.67  2893000       139.7668 2020-04-20    MMM\n84      142.25     142.77    140.50      141.63  2331100       137.7822 2020-04-21    MMM\n85      143.36     144.48    141.71      143.61  2750400       139.7084 2020-04-22    MMM\n86      144.58     147.58",
        "    143.88      144.33  2585300       140.4088 2020-04-23    MMM\n87      145.17     147.34    144.31      147.00  2247700       143.0063 2020-04-24    MMM\n88      148.00     154.49    147.89      153.65  4644900       149.4756 2020-04-27    MMM\n89      160.03     163.08    155.20      157.61  8294100       153.3280 2020-04-28    MMM\n90      158.54     160.22    155.17      156.26  3987100       152.0147 2020-04-29    MMM\n91      154.31     154.94    151.75      151.92  3667800       147.7926 2020-04-30    MMM",
        "\n92      149.30     150.04    147.73      148.60  2926400       144.5628 2020-05-01    MMM\n93      148.54     148.56    146.06      148.40  2229800       144.3682 2020-05-04    MMM\n94      149.89     150.00    147.10      147.43  2269200       143.4246 2020-05-05    MMM\n95      147.79     148.17    145.99      146.20  2168600       142.2280 2020-05-06    MMM\n96      147.70     147.85    144.90      145.74  2800800       141.7805 2020-05-07    MMM\n97      147.08     149.18    146.38      148.51  2169700       144.4753",
        " 2020-05-08    MMM\n98      147.82     147.96    145.59      145.73  3034600       141.7708 2020-05-11    MMM\n99      146.55     147.22    141.45      141.52  3030000       137.6752 2020-05-12    MMM\n100     140.71     140.73    135.00      136.12  4806000       132.4219 2020-05-13    MMM\n    ret.adjusted.prices ret.closing.prices\n1                    NA                 NA\n2          0.0187045859       0.0187046245\n3          0.0176769644       0.0176769464\n4         -0.0100296768      -0.0100297416\n5         -0.0005094418",
        "      -0.0005093786\n6          0.0037941117       0.0037940937\n7         -0.0080672287      -0.0080672066\n8          0.0033555917       0.0033554911\n9          0.0202923594       0.0202924954\n10        -0.0086110993      -0.0086111278\n11         0.0009527220       0.0009526366\n12        -0.0040309906      -0.0040309093\n13         0.0153458303       0.0153457622\n14         0.0031555770       0.0031555776\n15        -0.0040287089      -0.0040286756\n16         0.0024934454       0.0024934726\n17         0.0024872436",
        "       0.0024872706\n18        -0.0087665692      -0.0087665879\n19         0.0068416512       0.0068416732\n20         0.0018784957       0.0018784101\n21        -0.0108079741      -0.0108078684\n22        -0.0075812141      -0.0075812476\n23        -0.0016289250      -0.0016289052\n24         0.0023068128       0.0023066782\n25        -0.0141453797      -0.0141453218\n26        -0.0572225976      -0.0572225856\n27        -0.0216210250      -0.0216209805\n28         0.0031481950       0.0031481173\n29        -0.0236908603",
        "      -0.0236907951\n30        -0.0130468134      -0.0130468168\n31         0.0041510479       0.0041510251\n32         0.0323707714       0.0323708779\n33         0.0034497965       0.0034497443\n34        -0.0172508818      -0.0172508872\n35         0.0004372937       0.0004372314\n36         0.0143615676       0.0143615553\n37         0.0083101990       0.0083102864\n38        -0.0158319793      -0.0246642731\n39         0.0078242954       0.0078242366\n40        -0.0132288709      -0.0132289303\n41         0.0028951133",
        "       0.0028952101\n42        -0.0048951613      -0.0048951802\n43        -0.0102800719      -0.0102800518\n44        -0.0279104184      -0.0279104709\n45        -0.0373647562      -0.0373647780\n46         0.0143683852       0.0143684094\n47         0.0080557890       0.0080558334\n48        -0.0061267886      -0.0061267913\n49         0.0253283456       0.0253283227\n50        -0.0508430360      -0.0508430192\n51         0.0601762368       0.0601761959\n52        -0.0166904054      -0.0166904278\n53         0.0147942286",
        "       0.0147942008\n54        -0.0624145413      -0.0624145550\n55         0.0641399435       0.0641399773\n56        -0.0395304938      -0.0395303189\n57        -0.0927735700      -0.0927737200\n58         0.0606376268       0.0606377517\n59        -0.0760161819      -0.0760163010\n60         0.0269649727       0.0269650744\n61         0.0191908141       0.0191907316\n62         0.0035759802       0.0035760545\n63        -0.0917750833      -0.0917751179\n64        -0.0562094388      -0.0562094328\n65         0.1259864003",
        "       0.1259862359\n66        -0.0088910155      -0.0088909583\n67         0.0352744311       0.0352744431\n68        -0.0215890511      -0.0215889863\n69         0.0337735499       0.0337736403\n70        -0.0089299483      -0.0089299401\n71        -0.0246867217      -0.0246868077\n72         0.0358269779       0.0358269869\n73        -0.0298745885      -0.0298746348\n74         0.0516481549       0.0516481378\n75         0.0277184942       0.0277186147\n76         0.0303597472       0.0303596045\n77        -0.0081214349",
        "      -0.0081213904\n78        -0.0093383509      -0.0093382393\n79         0.0255465957       0.0255464833\n80        -0.0331690962      -0.0331690091\n81        -0.0017910825      -0.0017911959\n82         0.0107660894       0.0107661357\n83        -0.0190496876      -0.0190496304\n84        -0.0141990705      -0.0141991580\n85         0.0139801009       0.0139800602\n86         0.0050134707       0.0050135854\n87         0.0184993566       0.0184992584\n88         0.0452380763       0.0452380544\n89         0.0257728765",
        "       0.0257729070\n90        -0.0085654517      -0.0085654844\n91        -0.0277742304      -0.0277742041\n92        -0.0218535724      -0.0218535548\n93        -0.0013460998      -0.0013459757\n94        -0.0065362991      -0.0065363951\n95        -0.0083429129      -0.0083429157\n96        -0.0031463138      -0.0031463202\n97         0.0190063681       0.0190063806\n98        -0.0187192457      -0.0187192721\n99        -0.0288890735      -0.0288889873\n100       -0.0381570690      -0.0381572134\n [ reached 'max' / getOption(\"max.print\") -- omitted",
        " 24535 rows ]\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "library(ggplot2)",
        "> ",
        "View(l.out)",
        "> ",
        "",
        "> ",
        "print(tickers)",
        "  [1] \"MMM\"   \"ABT\"   \"ABBV\"  \"ABMD\"  \"ACN\"   \"ATVI\"  \"ADBE\"  \"AMD\"   \"AAP\"   \"AES\"   \"AFL\"   \"A\"    \n [13] \"APD\"   \"AKAM\"  \"ALK\"   \"ALB\"   \"ARE\"   \"ALXN\"  \"ALGN\"  \"ALLE\"  \"LNT\"   \"ALL\"   \"GOOGL\" \"GOOG\" \n [25] \"MO\"    \"AMZN\"  \"AMCR\"  \"AEE\"   \"AAL\"   \"AEP\"   \"AXP\"   \"AIG\"   \"AMT\"   \"AWK\"   \"AMP\"   \"ABC\"  \n [37] \"AME\"   \"AMGN\"  \"APH\"   \"ADI\"   \"ANSS\"  \"ANTM\"  \"AON\"   \"AOS\"   \"APA\"   \"AIV\"   \"AAPL\"  \"AMAT\" \n [49] \"APTV\"  \"ADM\"   \"ANET\"  \"AJG\"   \"AIZ\"   \"T\"     \"ATO\"   \"ADSK\"  \"ADP\"   \"AZO\"   \"AVB\"   \"AVY\"  \n [61]",
        " \"BKR\"   \"BLL\"   \"BAC\"   \"BK\"    \"BAX\"   \"BDX\"   \"BRK.B\" \"BBY\"   \"BIO\"   \"BIIB\"  \"BLK\"   \"BA\"   \n [73] \"BKNG\"  \"BWA\"   \"BXP\"   \"BSX\"   \"BMY\"   \"AVGO\"  \"BR\"    \"BF.B\"  \"CHRW\"  \"COG\"   \"CDNS\"  \"CPB\"  \n [85] \"COF\"   \"CAH\"   \"KMX\"   \"CCL\"   \"CARR\"  \"CTLT\"  \"CAT\"   \"CBOE\"  \"CBRE\"  \"CDW\"   \"CE\"    \"CNC\"  \n [97] \"CNP\"   \"CERN\"  \"CF\"    \"SCHW\" \n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# We only need the adjusted daily price for this ratio so, removing everything else with this function",
        "> ",
        "price_adj <- function(tickers){",
        "+ ",
        "  price_adjusted = NULL",
        "+ ",
        "  for (i in tickers){",
        "+ ",
        "    ",
        "+ ",
        "    ",
        "+ ",
        "    bool = l.out$df.tickers$ticker == i",
        "+ ",
        "    data = l.out$df.tickers$price.adjusted[bool]",
        "+ ",
        "    price_adjusted <- cbind(price_adjusted, tickers = data)",
        "+ ",
        "    ",
        "+ ",
        "  }",
        "+ ",
        "  colnames(price_adjusted) <- tickers",
        "+ ",
        "  return(price_adjusted)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "price_adjusted <- price_adj(tickers)",
        "Error in dimnames(x) <- dn : \n  length of 'dimnames' [2] not equal to array extent\n",
        "In addition: ",
        "Warning message:\n",
        "In cbind(price_adjusted, tickers = data) :",
        "\n ",
        " number of rows of result is not a multiple of vector length (arg 2)\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# We calculate the daily expected return by calculating the percentage change in price everyday",
        "> ",
        "",
        "> ",
        "daily_return <- function(df){",
        "+ ",
        "  x <- ncol(df)",
        "+ ",
        "  y <- nrow(df)",
        "+ ",
        "  e <- NULL",
        "+ ",
        "  for (i in (1:x)){",
        "+ ",
        "    d <- NULL",
        "+ ",
        "    for (j in (1:y)){",
        "+ ",
        "      ",
        "+ ",
        "      a <- df[j,i]",
        "+ ",
        "      if (j != y){",
        "+ ",
        "        b <- df[(j+1),i]",
        "+ ",
        "        c <- (b - a)/a",
        "+ ",
        "        d <- append(d, c)}",
        "+ ",
        "  ",
        "+ ",
        "    }",
        "+ ",
        "    e <- cbind(e, tickets = d)",
        "+ ",
        "    }",
        "+ ",
        "  colnames(e) <- colnames(df)",
        "+ ",
        "  return(e)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "daily_return(price_adjusted)",
        "              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  1.870459e-02 -0.0078992494  0.0058577257 -0.0385999780  0.0134421834  0.0015220879\ntickers  1.767696e-02  0.0079621443  0.0107515111  0.0463503164 -0.0012790766 -0.0055724787\ntickers -1.002968e-02 -0.0008014024 -0.0044320768  0.0109129370  0.0036997050 -0.0013584429\ntickers -5.094418e-04  0.0000000000 -0.0002225945 -0.0074869877  0.0020792766  0.0013602908\ntickers  3.794112e-03  0.0013750194 -0.0070132699 -0.0101747912",
        "  0.0008016159  0.0050942806\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers -6.110551e-05  0.0308195176  1.048052e-02  0.0132991822  0.0028306108  8.046366e-03\ntickers  4.090312e-03  0.0296715049  1.170012e-02  0.0005046973 -0.0112908518  8.217042e-04\ntickers  2.097592e-03  0.0237571937  3.750746e-03 -0.0030271780  0.0041872404  4.691361e-04\ntickers  4.732426e-03  0.0019338203 -8.096161e-03  0.0086033438 -0.0026535233  1.758548e-03\ntickers -1.237932e-03 -0.0096504609",
        " -5.776382e-03  0.0025087073  0.0000000000 -3.512054e-04\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  0.0083240720  0.0278073476  0.0020230556  0.0131031660 -3.628956e-03 -0.0133944447\ntickers  0.0005957787 -0.0109371056 -0.0007210114  0.0294201533 -1.883859e-04  0.0064692392\ntickers -0.0003827585 -0.0020952275 -0.0028864602 -0.0015186688  5.589997e-03 -0.0016295492\ntickers  0.0043820362  0.0071152803 -0.0002894161  0.0023505573 -4.372124e-04 -0.0122415580",
        "\ntickers -0.0024990872  0.0018531852 -0.0112929270 -0.0066215012  2.311983e-03 -0.0034884513\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers -3.141498e-03  0.0042043156  0.0134636286  3.327093e-03 -0.0038482869 -4.756551e-03\ntickers  1.923852e-02 -0.0062802248 -0.0118289904 -6.273590e-03 -0.0004366173 -5.557243e-04\ntickers -8.988279e-04  0.0036462059 -0.0005525010  2.615334e-03 -0.0045904141 -3.914406e-03\ntickers  1.331444e-03  0.0062161539 -0.0009212114  3.867931e-03",
        "  0.0134182637  1.253384e-02\ntickers -2.228114e-03 -0.0004011296  0.0022131130  2.419439e-03 -0.0057468834 -6.255520e-03\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  0.0066943204 -0.0032249587 -0.0027777874  0.0148442469  0.0171629475  0.0098967012\ntickers  0.0082143241  0.0036383991  0.0129989552 -0.0121458174  0.0089531087 -0.0121179274\ntickers -0.0084796861 -0.0021137975 -0.0109990273  0.0014543394 -0.0040955230  0.0009600272\ntickers  0.0023865918  0.0444665862",
        "  0.0055608209 -0.0014522273  0.0167923275  0.0004261069\ntickers  0.0000000000  0.0005511802  0.0092163969  0.0087255480 -0.0414560397  0.0033021733\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  7.530189e-03 -0.0075100648  0.0157894238  0.0087127226  0.0048422217  2.231488e-02\ntickers -1.017733e-02 -0.0110594447 -0.0033810950 -0.0108377059 -0.0048188876 -8.169606e-04\ntickers  2.008241e-03 -0.0005886425  0.0004846522  0.0018947125  0.0026304031 -2.102893e-03",
        "\ntickers  5.371173e-03 -0.0062818832  0.0079620106  0.0021378264 -0.0002385531 -4.331373e-03\ntickers -1.754178e-03  0.0088897412  0.0053101795  0.0088612131 -0.0057848165 -1.646191e-03\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  2.209770e-03  0.0050446978  9.340982e-04  9.435496e-03  0.0122776735  0.0160284181\ntickers  3.607941e-03 -0.0001234767  1.026690e-03 -5.424770e-03 -0.0122060289  0.0005941786\ntickers -4.294077e-03 -0.0028802224 -2.797345e-04  4.615245e-03",
        "  0.0029718610  0.0043536890\ntickers  3.610545e-03 -0.0017744726  7.087469e-03  8.357965e-05  0.0071737575  0.0008540234\ntickers -1.199209e-03 -0.0015296125  6.481987e-04 -2.338611e-03  0.0013548795  0.0054469533\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  9.536453e-04  0.0014782986 -0.0039630530  0.0000000000 -2.071201e-03  0.0187902984\ntickers -1.014612e-02 -0.0059046381  0.1728559867 -0.0047328328  1.631827e-02 -0.0118103997\ntickers -4.813993e-04  0.0076368040",
        " -0.0135696076  0.0057460762  9.506324e-04  0.0068762858\ntickers  1.203706e-03  0.0050526741  0.0038212306  0.0013789975  1.984039e-02 -0.0030894642\ntickers -2.115788e-03  0.0014663075 -0.0057099686  0.0082628326 -3.794623e-04 -0.0022835021\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers -0.0153295697  0.0032867302  1.177911e-02  0.0011541282 -0.0025834979  0.0056511694\ntickers -0.0085106099  0.0050228497 -6.209066e-03 -0.0121567745 -0.0252933067 -0.0020434379",
        "\ntickers -0.0066994410  0.0013037239 -1.122644e-03  0.0031826260  0.0085195842 -0.0028155282\ntickers  0.0087469870  0.0026041425  4.740041e-03 -0.0001056111  0.0003100329  0.0051335087\ntickers  0.0061637037  0.0021644822 -5.739059e-03  0.0021151567  0.0045711571  0.0020429161\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  0.0130855267 -0.0051148275  0.0139266973  6.283455e-03  0.0012995983 -0.0002275153\ntickers -0.0102440492  0.0004375520 -0.0062539814 -1.049122e-02",
        " -0.0044228286  0.0072013656\ntickers -0.0047700948  0.0054122349 -0.0006470069  4.481587e-03  0.0041045186  0.0026343222\ntickers -0.0007234974  0.0017943613  0.0025896007 -7.045040e-03  0.0018274655 -0.0010508180\ntickers -0.0033484409  0.0061875812  0.0024656455 -6.715017e-03  0.0024960627 -0.0110461413\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  0.0048058267  0.0229127050  0.0002860109 -4.326392e-03  3.283712e-03  1.414863e-02\ntickers  0.0167397570  0.0010738083",
        "  0.0060068020 -5.135298e-03  2.460911e-02  6.736355e-03\ntickers -0.0011761159 -0.0003063475  0.0014218975 -3.970620e-04  2.011374e-03 -1.754983e-03\ntickers  0.0031397292 -0.0049057503  0.0085177844  2.780538e-03 -4.250825e-03 -7.142617e-03\ntickers -0.0027385624 -0.0033893829 -0.0047860971 -3.367067e-03 -3.320306e-03  6.603726e-03\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers -1.026614e-02  3.541470e-02  1.166073e-02 -5.474499e-03 -0.0164917482  1.005432e-02",
        "\ntickers -1.026017e-03 -4.989632e-03  1.694104e-03  1.402057e-04  0.0291158964  4.369170e-03\ntickers  3.308999e-03 -5.796538e-03  8.323415e-03 -4.002706e-05 -0.0134795203  5.856023e-03\ntickers -9.097232e-04 -3.281327e-03 -7.498267e-03  7.205124e-03 -0.0092492033  9.941325e-03\ntickers -9.561785e-03  2.176624e-03 -5.633099e-03 -4.569989e-04  0.0006668899  3.981927e-03\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers -0.0151446604  0.0006632616  0.0120454378  0.0105011631",
        " -0.0057659640  0.0087319172\ntickers  0.0018090853  0.0002207846 -0.0033061054 -0.0047236196  0.0016614512 -0.0060675175\ntickers -0.0094808000  0.0009573839  0.0019902697 -0.0007910091  0.0030357562  0.0016277913\ntickers -0.0015952499  0.0088274436 -0.0011035753  0.0126662621 -0.0078627005 -0.0035753739\ntickers -0.0011413181  0.0039375080 -0.0008837163  0.0028142991 -0.0045601060  0.0048115854\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  0.0009123249  0.0235156891",
        "  0.0058839839  0.0197013350 -9.669404e-05  0.0235130953\ntickers  0.0001301409  0.0103387919  0.0007134114 -0.0012202178 -4.256577e-03 -0.0129343975\ntickers  0.0095039322 -0.0085274959 -0.0069859853  0.0024434172  1.943320e-04  0.0031293609\ntickers  0.0047717841 -0.0034405118  0.0057430149 -0.0042656307  5.148109e-03 -0.0023396786\ntickers  0.0002566656 -0.0092059804  0.0034260955  0.0089758974 -4.638552e-03  0.0064490426\n              tickers       tickers       tickers       tickers       tickers       tickers",
        "\ntickers -0.0615447104  0.0763129563  0.0625000000  0.0056108778  0.0175839262  0.0124191416\ntickers -0.0380757096  0.0209121181 -0.0949019292  0.0098992079  0.0063018669 -0.0060494042\ntickers -0.0035882373 -0.0062426595  0.0138647827 -0.0016040100 -0.0068684900  0.0056635405\ntickers  0.0019130992  0.0076560719  0.1495726496  0.0035701714  0.0050175822  0.0006725334\ntickers -0.0070762328  0.0000000000  0.1486988848  0.0040910707  0.0004047871 -0.0017641134\n              tickers       tickers       tickers       tickers",
        "       tickers       tickers\ntickers  0.0137077733  0.0117399232  0.0071031119  0.0009697915 -0.0018671520  0.0180657114\ntickers -0.0087400727 -0.0072956838 -0.0011349742  0.0156628774  0.0000000000  0.0024568427\ntickers  0.0079853434  0.0007000240  0.0014610094  0.0052463909  0.0011224333 -0.0020425232\ntickers  0.0113880013  0.0116106471 -0.0022692123  0.0026886288  0.0056053720 -0.0012308627\ntickers -0.0053850849 -0.0046322463  0.0017057800  0.0039432175  0.0000000000  0.0035606250\n              tickers       tickers",
        "       tickers       tickers       tickers       tickers\ntickers  0.0409658230 -0.0016598492  1.156239e-03  1.312119e-02  7.315402e-04  6.731368e-03\ntickers -0.0109775419  0.0122610524  9.449414e-03  5.431198e-03 -7.477324e-03 -8.614959e-03\ntickers  0.0039790752  0.0000000000  2.911965e-04  8.294003e-05  7.244287e-04 -1.686267e-03\ntickers  0.0108468200 -0.0028741351  1.012774e-02  2.160600e-03  1.171441e-02  5.261813e-03\ntickers -0.0187782346 -0.0047354095 -4.199883e-03 -2.487493e-03 -2.158357e-03  6.914347e-03",
        "\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  0.0109370401  2.953900e-02  0.0081323833  0.0130218405 -0.0089807968  0.0039642638\ntickers -0.0014236766  9.189152e-03 -0.0109479005 -0.0023573471  0.0136986068  0.0031843069\ntickers  0.0028510666 -1.191459e-02  0.0027187478 -0.0075684269 -0.0066528895 -0.0021585606\ntickers  0.0002844256  1.813684e-03  0.0027114463 -0.0025296216  0.0014650854  0.0157781804\ntickers  0.0046894586 -1.859315e-03  0.0033799932  0.0032820107",
        " -0.0016719122 -0.0020042465\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  0.0057057143 -0.0067966841  0.0077898830 -0.0107463673  0.0112178315  0.0119662311\ntickers -0.0024668234 -0.0081036429 -0.0020961070  0.0037526216 -0.0128367329 -0.0010915477\ntickers  0.0017310833  0.0046294835  0.0009189148  0.0003935921 -0.0001606023 -0.0036423365\ntickers  0.0059244939  0.0053312639  0.0030168605  0.0024394567  0.0000000000  0.0056662667\ntickers -0.0066259019 -0.0042243507",
        "  0.0038576019  0.0071021563  0.0041747141  0.0059978220\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  0.0081326987  0.0074627501  0.0103116490  0.0034934076  0.0418893363  0.0128564064\ntickers -0.0093325035 -0.0018881903  0.0002267920 -0.0018101754 -0.0299400433  0.0255058684\ntickers -0.0036723335 -0.0024737135  0.0097504697  0.0015346251  0.0008817612 -0.0014011750\ntickers -0.0044872320  0.0004375271  0.0098811427  0.0005572581 -0.0105726266  0.0063143780",
        "\ntickers  0.0006439505  0.0087489245  0.0028907834 -0.0082139746  0.0145444001 -0.0080177101\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  0.0083874517  0.0103679323  1.657511e-02 -1.814381e-03  1.476509e-02  0.0031120087\ntickers  0.0138103584 -0.0093787557 -4.552737e-03  4.951697e-03 -9.369466e-03  0.0037918531\ntickers  0.0010836180 -0.0012252703 -6.434638e-03  4.303357e-03  1.157228e-02 -0.0103023171\ntickers  0.0051027989 -0.0002229781  1.514739e-02 -6.334397e-03",
        "  1.209911e-03  0.0072866811\ntickers -0.0003075993  0.0032347725 -2.267249e-03  3.437384e-03 -2.197286e-03 -0.0082672921\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  0.0169614240  3.813370e-03  1.486557e-02  0.0081279002  1.009485e-02  0.0064778817\ntickers  0.0170333270 -5.155484e-03 -9.999853e-03 -0.0062858502  1.711657e-03 -0.0026819010\ntickers  0.0052337485  3.136648e-03 -3.841386e-03  0.0035755150 -1.433068e-03  0.0017479407\ntickers  0.0131899954  5.098157e-03",
        "  3.999022e-03 -0.0015074512  1.435125e-03 -0.0004025212\ntickers -0.0017129413 -5.478230e-03  3.413968e-03 -0.0002744617 -3.968697e-03 -0.0010742422\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  0.0255969784  1.601961e-02  0.0110977953 -0.0006780068  0.0109399721 -0.0028744791\ntickers -0.0165766693  2.551636e-03 -0.0139695643  0.0071913979  0.0022903438  0.0079700793\ntickers  0.0075758199  6.525100e-04 -0.0018398585  0.0106425161 -0.0031420017 -0.0008411700",
        "\ntickers -0.0035714701 -2.285001e-03  0.0037788392 -0.0033324448  0.0017191848  0.0028624470\ntickers -0.0018864234  3.927061e-04 -0.0082637137 -0.0002674468  0.0057781220 -0.0080590538\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers -0.0107883406  0.0143368207 -1.345169e-02  0.0061728125 -8.235318e-03  0.0044021928\ntickers  0.0058048276  0.0298391148  1.391623e-02  0.0114746170 -1.186230e-02 -0.0156862720\ntickers  0.0005246307  0.0118185555  4.618975e-05  0.0129170416",
        "  1.028901e-03 -0.0007030447\ntickers -0.0101558194 -0.0067822696 -4.990698e-03  0.0125304765  1.173547e-02  0.0024625086\ntickers  0.0054838791 -0.0238998790  1.295743e-02 -0.0059139735  5.927477e-04 -0.0063165293\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  0.0057998477  0.0128332350  0.0072626259 -1.847023e-03  0.0212812165  0.0063570053\ntickers -0.0015174203 -0.0068226444 -0.0085968106 -9.891017e-03 -0.0172230070 -0.0108114519\ntickers  0.0039512764  0.0075236833",
        "  0.0019580420  7.025116e-03  0.0085460946 -0.0008596068\ntickers  0.0075688770  0.0042208118  0.0086544109 -6.016026e-03 -0.0123350956  0.0012289728\ntickers -0.0045071516 -0.0054962819 -0.0049820093  8.627789e-03  0.0082536271  0.0066290904\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  0.000000e+00  1.339557e-02  0.0016507594  0.0015424636  7.448629e-03 -0.0011666337\ntickers -1.277398e-02  7.478863e-03  0.0058597739 -0.0084706749 -5.186587e-03 -0.0064254334",
        "\ntickers  4.752646e-03 -5.092750e-03 -0.0005461395 -0.0046597914  8.874369e-04  0.0023516726\ntickers  8.976556e-03  4.684978e-03  0.0058287428  0.0030430351  1.773231e-03  0.0043988643\ntickers  2.395764e-04 -2.849543e-03 -0.0070626243  0.0025671998  6.416626e-03  0.0026276216\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers -0.0062548723 -0.0047668708 -0.0167687925  1.697738e-03  0.0041621265 -0.0029200371\ntickers  0.0058221312 -0.0015965766  0.0044546362  7.733070e-03",
        "  0.0005526799  0.0051250512\ntickers -0.0021901481 -0.0029317696  0.0012670483 -6.832627e-03  0.0000000000 -0.0039021837\ntickers -0.0007839871 -0.0056134795 -0.0020247805  5.927001e-03  0.0011046372  0.0009924793\ntickers  0.0000000000 -0.0147849456 -0.0065940000 -5.260218e-04 -0.0049654943  0.0002086527\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  0.0241080436  0.0135923724  5.682837e-03  0.0023656499  5.522500e-03  0.0173539148\ntickers -0.0050539067  0.0039341511",
        " -1.482121e-03  0.0068179632 -1.331450e-02  0.0087103092\ntickers  0.0001337588 -0.0064470293  7.050806e-03 -0.0089856476  7.337538e-03  0.0051570668\ntickers  0.0070835037 -0.0000424191 -3.685697e-04  0.0074901838  6.696326e-04 -0.0019089227\ntickers -0.0017251126 -0.0049622404 -7.372727e-04 -0.0020868715  2.844833e-03 -0.0060968922\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  6.024138e-03  3.108204e-03 -0.0007466455 -4.452820e-03  0.0125801634  0.0027310424",
        "\ntickers  5.987956e-03 -1.050702e-02 -0.0073474052 -1.782458e-03 -0.0043025372  0.0163413069\ntickers  4.303694e-04  2.798903e-03  0.0084054302  5.457873e-03 -0.0025245627 -0.0024564762\ntickers  5.089717e-03  1.093789e-02  0.0026125186  4.021039e-03  0.0087126767  0.0165659734\ntickers  0.000000e+00  5.159509e-03  0.0044670881  3.003964e-04  0.0034258937 -0.0094692799\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  0.0065934532  0.0096680544  6.278357e-03  0.0104492253",
        "  0.0089826462 -0.0014367761\ntickers -0.0049907422 -0.0101665870 -1.363230e-02 -0.0055006811 -0.0188953709  0.0037933372\ntickers  0.0065831840  0.0027468141  3.656179e-03  0.0026548546  0.0071295672  0.0072973899\ntickers -0.0026472335  0.0040497034  2.551009e-04  0.0000000000  0.0027581828  0.0001293632\ntickers  0.0003122583  0.0002371068  5.244388e-03  0.0019859203 -0.0068763846  0.0027163156\n              tickers       tickers       tickers       tickers       tickers       tickers\ntickers  0.0059702276  0.0079264482",
        " -0.0373720852  0.0011647336  0.0086956588 -0.0050832815\ntickers -0.0064133802  0.0050041146  0.0052052195 -0.0005817256 -0.0051184948 -0.0014149379\ntickers  0.0057802960 -0.0038413248 -0.0032364573 -0.0051411293  0.0021661361 -0.0009445628\ntickers  0.0019157218  0.0015710293  0.0035356520  0.0130167612 -0.0018913456  0.0043333763\ntickers -0.0008603284 -0.0034222396  0.0006470808  0.0014919535  0.0010827050  0.0053346225\n              tickers       tickers       tickers       tickers       tickers       tickers",
        "\ntickers  0.0074817905  5.214335e-03  0.0048386098  0.0022583348 -0.0034063093  1.459210e-03\ntickers  0.0241022456 -4.250596e-03 -0.0064204701 -0.0088079010  0.0000000000 -2.914168e-03\ntickers -0.0059990714 -2.387580e-03  0.0003230452  0.0018599748  0.0018797909  2.578827e-03\ntickers  0.0113409524  5.947023e-03  0.0051680404  0.0006187472  0.0055437937 -5.144457e-03\ntickers  0.0002623482  7.570172e-03 -0.0070694904 -0.0024737382 -0.0020355340  9.049410e-03\n              tickers       tickers       tickers       tickers",
        "      tickers       tickers\ntickers  4.950300e-03  0.0000000000  0.0169180123  0.0068109630  0.007438739 -0.0238290973\ntickers -1.977262e-02  0.0041960773  0.0078172069  0.0123183812 -0.004219291  0.0084175273\ntickers  3.197930e-03 -0.0043685119 -0.0055688116  0.0065828430  0.003178038 -0.0003709980\ntickers -8.652401e-03 -0.0051507694  0.0008029596  0.0056480357 -0.002112088  0.0042679440\ntickers  9.964689e-03  0.0000000000 -0.0028084014 -0.0035471846 -0.009523812 -0.0072986051\n [ reached getOption(\"max.print\") -- omitted 246 rows ]\n",
        "> ",
        "price_adjusted[1,3]",
        " tickers \n84.11353 \n",
        "> ",
        "exp_return <- daily_return(price_adjusted)",
        "> ",
        "View(exp_return)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# we get the average of the year-round % change in price to get the average daily return",
        "> ",
        "",
        "> ",
        "R_Eturn<-avg_dailyreturn(exp_return)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "avg_dailyreturn <- function(df){",
        "+ ",
        "  b <- NULL",
        "+ ",
        "  c <- ncol(df)",
        "+ ",
        "  for (i in 1:c){",
        "+ ",
        "    a <- sum(df[,i])/nrow(df)",
        "+ ",
        "    b <- cbind(b, tickets = a)",
        "+ ",
        "    }",
        "+ ",
        "  ",
        "+ ",
        "  colnames(b) <- colnames(df)",
        "+ ",
        "  return(b)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "# calculating the individual standard deviation of each of the stocks (this will be the risk for our data)",
        "> ",
        "",
        "> ",
        "stan_D <- function(df){",
        "+ ",
        "  b <- NULL",
        "+ ",
        "  for (i in 1:ncol(df)){",
        "+ ",
        "    a<- sd(df[,i])",
        "+ ",
        "    b <- cbind(b, data = a)",
        "+ ",
        "  }",
        "+ ",
        "  colnames(b) <- colnames(df)",
        "+ ",
        "  return(b)",
        "+ ",
        "}",
        "> ",
        "sd<- stan_D(exp_return)",
        "> ",
        "",
        "> ",
        "View(sd)",
        "> ",
        "",
        "> ",
        "for (i in tickers){",
        "+ ",
        "  print(a[,i])",
        "+ ",
        "}",
        "Error in a[, i] : subscript out of bounds\n",
        "> ",
        "",
        "> ",
        "cor(exp_return[,1],exp_return[,2])",
        "[1] 0.6091308\n",
        "> ",
        "# to get a combination of all different corelation in the portfolio",
        "> ",
        "install.packages(\"gtools\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "library(gtools)",
        "> ",
        "nrow(combinations(3,2,tickers))",
        "[1] 3\n",
        "> ",
        "comb <- combinations(3,2,tickers)",
        "> ",
        "comb",
        "     [,1]  [,2] \n[1,] \"A\"   \"AAL\"\n[2,] \"A\"   \"AAP\"\n[3,] \"AAL\" \"AAP\"\n",
        "> ",
        "for (i in 1:nrow(comb)){",
        "+ ",
        "  names_try <- comb[i,1]",
        "+ ",
        "}",
        "> ",
        "expand.grid(tickers,tickers)",
        "     Var1 Var2\n1     MMM  MMM\n2     ABT  MMM\n3    ABBV  MMM\n4    ABMD  MMM\n5     ACN  MMM\n6    ATVI  MMM\n7    ADBE  MMM\n8     AMD  MMM\n9     AAP  MMM\n10    AES  MMM\n11    AFL  MMM\n12      A  MMM\n13    APD  MMM\n14   AKAM  MMM\n15    ALK  MMM\n16    ALB  MMM\n17    ARE  MMM\n18   ALXN  MMM\n19   ALGN  MMM\n20   ALLE  MMM\n21    LNT  MMM\n22    ALL  MMM\n23  GOOGL  MMM\n24   GOOG  MMM\n25     MO  MMM\n26   AMZN  MMM\n27   AMCR  MMM\n28    AEE  MMM\n29    AAL  MMM\n30    AEP  MMM\n31    AXP  MMM\n32    AIG  MMM\n33    AMT  MMM\n34 ",
        "   AWK  MMM\n35    AMP  MMM\n36    ABC  MMM\n37    AME  MMM\n38   AMGN  MMM\n39    APH  MMM\n40    ADI  MMM\n41   ANSS  MMM\n42   ANTM  MMM\n43    AON  MMM\n44    AOS  MMM\n45    APA  MMM\n46    AIV  MMM\n47   AAPL  MMM\n48   AMAT  MMM\n49   APTV  MMM\n50    ADM  MMM\n51   ANET  MMM\n52    AJG  MMM\n53    AIZ  MMM\n54      T  MMM\n55    ATO  MMM\n56   ADSK  MMM\n57    ADP  MMM\n58    AZO  MMM\n59    AVB  MMM\n60    AVY  MMM\n61    BKR  MMM\n62    BLL  MMM\n63    BAC  MMM\n64     BK  MMM\n65    BAX  MMM\n66    BDX  MMM\n67  BRK.B  MMM\n68    BBY",
        "  MMM\n69    BIO  MMM\n70   BIIB  MMM\n71    BLK  MMM\n72     BA  MMM\n73   BKNG  MMM\n74    BWA  MMM\n75    BXP  MMM\n76    BSX  MMM\n77    BMY  MMM\n78   AVGO  MMM\n79     BR  MMM\n80   BF.B  MMM\n81   CHRW  MMM\n82    COG  MMM\n83   CDNS  MMM\n84    CPB  MMM\n85    COF  MMM\n86    CAH  MMM\n87    KMX  MMM\n88    CCL  MMM\n89   CARR  MMM\n90   CTLT  MMM\n91    CAT  MMM\n92   CBOE  MMM\n93   CBRE  MMM\n94    CDW  MMM\n95     CE  MMM\n96    CNC  MMM\n97    CNP  MMM\n98   CERN  MMM\n99     CF  MMM\n100  SCHW  MMM\n101   MMM  ABT\n102   ABT  ABT",
        "\n103  ABBV  ABT\n104  ABMD  ABT\n105   ACN  ABT\n106  ATVI  ABT\n107  ADBE  ABT\n108   AMD  ABT\n109   AAP  ABT\n110   AES  ABT\n111   AFL  ABT\n112     A  ABT\n113   APD  ABT\n114  AKAM  ABT\n115   ALK  ABT\n116   ALB  ABT\n117   ARE  ABT\n118  ALXN  ABT\n119  ALGN  ABT\n120  ALLE  ABT\n121   LNT  ABT\n122   ALL  ABT\n123 GOOGL  ABT\n124  GOOG  ABT\n125    MO  ABT\n126  AMZN  ABT\n127  AMCR  ABT\n128   AEE  ABT\n129   AAL  ABT\n130   AEP  ABT\n131   AXP  ABT\n132   AIG  ABT\n133   AMT  ABT\n134   AWK  ABT\n135   AMP  ABT\n136   ABC  ABT\n137",
        "   AME  ABT\n138  AMGN  ABT\n139   APH  ABT\n140   ADI  ABT\n141  ANSS  ABT\n142  ANTM  ABT\n143   AON  ABT\n144   AOS  ABT\n145   APA  ABT\n146   AIV  ABT\n147  AAPL  ABT\n148  AMAT  ABT\n149  APTV  ABT\n150   ADM  ABT\n151  ANET  ABT\n152   AJG  ABT\n153   AIZ  ABT\n154     T  ABT\n155   ATO  ABT\n156  ADSK  ABT\n157   ADP  ABT\n158   AZO  ABT\n159   AVB  ABT\n160   AVY  ABT\n161   BKR  ABT\n162   BLL  ABT\n163   BAC  ABT\n164    BK  ABT\n165   BAX  ABT\n166   BDX  ABT\n167 BRK.B  ABT\n168   BBY  ABT\n169   BIO  ABT\n170  BIIB  ABT\n171   BLK",
        "  ABT\n172    BA  ABT\n173  BKNG  ABT\n174   BWA  ABT\n175   BXP  ABT\n176   BSX  ABT\n177   BMY  ABT\n178  AVGO  ABT\n179    BR  ABT\n180  BF.B  ABT\n181  CHRW  ABT\n182   COG  ABT\n183  CDNS  ABT\n184   CPB  ABT\n185   COF  ABT\n186   CAH  ABT\n187   KMX  ABT\n188   CCL  ABT\n189  CARR  ABT\n190  CTLT  ABT\n191   CAT  ABT\n192  CBOE  ABT\n193  CBRE  ABT\n194   CDW  ABT\n195    CE  ABT\n196   CNC  ABT\n197   CNP  ABT\n198  CERN  ABT\n199    CF  ABT\n200  SCHW  ABT\n201   MMM ABBV\n202   ABT ABBV\n203  ABBV ABBV\n204  ABMD ABBV\n205   ACN ABBV",
        "\n206  ATVI ABBV\n207  ADBE ABBV\n208   AMD ABBV\n209   AAP ABBV\n210   AES ABBV\n211   AFL ABBV\n212     A ABBV\n213   APD ABBV\n214  AKAM ABBV\n215   ALK ABBV\n216   ALB ABBV\n217   ARE ABBV\n218  ALXN ABBV\n219  ALGN ABBV\n220  ALLE ABBV\n221   LNT ABBV\n222   ALL ABBV\n223 GOOGL ABBV\n224  GOOG ABBV\n225    MO ABBV\n226  AMZN ABBV\n227  AMCR ABBV\n228   AEE ABBV\n229   AAL ABBV\n230   AEP ABBV\n231   AXP ABBV\n232   AIG ABBV\n233   AMT ABBV\n234   AWK ABBV\n235   AMP ABBV\n236   ABC ABBV\n237   AME ABBV\n238  AMGN ABBV\n239   APH ABBV\n240",
        "   ADI ABBV\n241  ANSS ABBV\n242  ANTM ABBV\n243   AON ABBV\n244   AOS ABBV\n245   APA ABBV\n246   AIV ABBV\n247  AAPL ABBV\n248  AMAT ABBV\n249  APTV ABBV\n250   ADM ABBV\n251  ANET ABBV\n252   AJG ABBV\n253   AIZ ABBV\n254     T ABBV\n255   ATO ABBV\n256  ADSK ABBV\n257   ADP ABBV\n258   AZO ABBV\n259   AVB ABBV\n260   AVY ABBV\n261   BKR ABBV\n262   BLL ABBV\n263   BAC ABBV\n264    BK ABBV\n265   BAX ABBV\n266   BDX ABBV\n267 BRK.B ABBV\n268   BBY ABBV\n269   BIO ABBV\n270  BIIB ABBV\n271   BLK ABBV\n272    BA ABBV\n273  BKNG ABBV\n274   BWA",
        " ABBV\n275   BXP ABBV\n276   BSX ABBV\n277   BMY ABBV\n278  AVGO ABBV\n279    BR ABBV\n280  BF.B ABBV\n281  CHRW ABBV\n282   COG ABBV\n283  CDNS ABBV\n284   CPB ABBV\n285   COF ABBV\n286   CAH ABBV\n287   KMX ABBV\n288   CCL ABBV\n289  CARR ABBV\n290  CTLT ABBV\n291   CAT ABBV\n292  CBOE ABBV\n293  CBRE ABBV\n294   CDW ABBV\n295    CE ABBV\n296   CNC ABBV\n297   CNP ABBV\n298  CERN ABBV\n299    CF ABBV\n300  SCHW ABBV\n301   MMM ABMD\n302   ABT ABMD\n303  ABBV ABMD\n304  ABMD ABMD\n305   ACN ABMD\n306  ATVI ABMD\n307  ADBE ABMD\n308   AMD ABMD",
        "\n309   AAP ABMD\n310   AES ABMD\n311   AFL ABMD\n312     A ABMD\n313   APD ABMD\n314  AKAM ABMD\n315   ALK ABMD\n316   ALB ABMD\n317   ARE ABMD\n318  ALXN ABMD\n319  ALGN ABMD\n320  ALLE ABMD\n321   LNT ABMD\n322   ALL ABMD\n323 GOOGL ABMD\n324  GOOG ABMD\n325    MO ABMD\n326  AMZN ABMD\n327  AMCR ABMD\n328   AEE ABMD\n329   AAL ABMD\n330   AEP ABMD\n331   AXP ABMD\n332   AIG ABMD\n333   AMT ABMD\n334   AWK ABMD\n335   AMP ABMD\n336   ABC ABMD\n337   AME ABMD\n338  AMGN ABMD\n339   APH ABMD\n340   ADI ABMD\n341  ANSS ABMD\n342  ANTM ABMD\n343",
        "   AON ABMD\n344   AOS ABMD\n345   APA ABMD\n346   AIV ABMD\n347  AAPL ABMD\n348  AMAT ABMD\n349  APTV ABMD\n350   ADM ABMD\n351  ANET ABMD\n352   AJG ABMD\n353   AIZ ABMD\n354     T ABMD\n355   ATO ABMD\n356  ADSK ABMD\n357   ADP ABMD\n358   AZO ABMD\n359   AVB ABMD\n360   AVY ABMD\n361   BKR ABMD\n362   BLL ABMD\n363   BAC ABMD\n364    BK ABMD\n365   BAX ABMD\n366   BDX ABMD\n367 BRK.B ABMD\n368   BBY ABMD\n369   BIO ABMD\n370  BIIB ABMD\n371   BLK ABMD\n372    BA ABMD\n373  BKNG ABMD\n374   BWA ABMD\n375   BXP ABMD\n376   BSX ABMD\n377   BMY",
        " ABMD\n378  AVGO ABMD\n379    BR ABMD\n380  BF.B ABMD\n381  CHRW ABMD\n382   COG ABMD\n383  CDNS ABMD\n384   CPB ABMD\n385   COF ABMD\n386   CAH ABMD\n387   KMX ABMD\n388   CCL ABMD\n389  CARR ABMD\n390  CTLT ABMD\n391   CAT ABMD\n392  CBOE ABMD\n393  CBRE ABMD\n394   CDW ABMD\n395    CE ABMD\n396   CNC ABMD\n397   CNP ABMD\n398  CERN ABMD\n399    CF ABMD\n400  SCHW ABMD\n401   MMM  ACN\n402   ABT  ACN\n403  ABBV  ACN\n404  ABMD  ACN\n405   ACN  ACN\n406  ATVI  ACN\n407  ADBE  ACN\n408   AMD  ACN\n409   AAP  ACN\n410   AES  ACN\n411   AFL  ACN",
        "\n412     A  ACN\n413   APD  ACN\n414  AKAM  ACN\n415   ALK  ACN\n416   ALB  ACN\n417   ARE  ACN\n418  ALXN  ACN\n419  ALGN  ACN\n420  ALLE  ACN\n421   LNT  ACN\n422   ALL  ACN\n423 GOOGL  ACN\n424  GOOG  ACN\n425    MO  ACN\n426  AMZN  ACN\n427  AMCR  ACN\n428   AEE  ACN\n429   AAL  ACN\n430   AEP  ACN\n431   AXP  ACN\n432   AIG  ACN\n433   AMT  ACN\n434   AWK  ACN\n435   AMP  ACN\n436   ABC  ACN\n437   AME  ACN\n438  AMGN  ACN\n439   APH  ACN\n440   ADI  ACN\n441  ANSS  ACN\n442  ANTM  ACN\n443   AON  ACN\n444   AOS  ACN\n445   APA  ACN\n446",
        "   AIV  ACN\n447  AAPL  ACN\n448  AMAT  ACN\n449  APTV  ACN\n450   ADM  ACN\n451  ANET  ACN\n452   AJG  ACN\n453   AIZ  ACN\n454     T  ACN\n455   ATO  ACN\n456  ADSK  ACN\n457   ADP  ACN\n458   AZO  ACN\n459   AVB  ACN\n460   AVY  ACN\n461   BKR  ACN\n462   BLL  ACN\n463   BAC  ACN\n464    BK  ACN\n465   BAX  ACN\n466   BDX  ACN\n467 BRK.B  ACN\n468   BBY  ACN\n469   BIO  ACN\n470  BIIB  ACN\n471   BLK  ACN\n472    BA  ACN\n473  BKNG  ACN\n474   BWA  ACN\n475   BXP  ACN\n476   BSX  ACN\n477   BMY  ACN\n478  AVGO  ACN\n479    BR  ACN\n480  BF.B",
        "  ACN\n481  CHRW  ACN\n482   COG  ACN\n483  CDNS  ACN\n484   CPB  ACN\n485   COF  ACN\n486   CAH  ACN\n487   KMX  ACN\n488   CCL  ACN\n489  CARR  ACN\n490  CTLT  ACN\n491   CAT  ACN\n492  CBOE  ACN\n493  CBRE  ACN\n494   CDW  ACN\n495    CE  ACN\n496   CNC  ACN\n497   CNP  ACN\n498  CERN  ACN\n499    CF  ACN\n500  SCHW  ACN\n [ reached 'max' / getOption(\"max.print\") -- omitted 9500 rows ]\n",
        "> ",
        "",
        "> ",
        "# Gives the corelation for any ammount of data in the data frame",
        "> ",
        "corelation <- function(df){",
        "+ ",
        "  comb <- combinations(3,2,tickers)",
        "+ ",
        "  e <- NULL",
        "+ ",
        "  names_cor <- NULL",
        "+ ",
        "  for (i in 1:nrow(comb)){",
        "+ ",
        "    b <- exp_return[,comb[i,1]]",
        "+ ",
        "    c <- exp_return[,comb[i,2]]",
        "+ ",
        "    d <- cor(b,c)",
        "+ ",
        "    e <- cbind(e,i = d)",
        "+ ",
        "    names_cor <- append(names_cor, paste(comb[i,1],comb[i,2]))",
        "+ ",
        "    ",
        "+ ",
        "  }",
        "+ ",
        "  colnames(e) <- names_cor",
        "+ ",
        "  return(e)",
        "+ ",
        "  ",
        "+ ",
        "}",
        "> ",
        "exp_return[,\"ZM\"]",
        "Error in exp_return[, \"ZM\"] : subscript out of bounds\n",
        "> ",
        "coor_value <- corelation(price_adjusted)",
        "Error in exp_return[, comb[i, 1]] : subscript out of bounds\n",
        "> ",
        "i <- c(\"ZM\",\"PLUG\")",
        "> ",
        "# So far",
        "> ",
        "weight <- c(\"NVAX\"= .2, \"ZM\" = .3, \"PLUG\"= .5)",
        "> ",
        "weight[\"NVAX\"] ",
        "NVAX \n 0.2 \n",
        "> ",
        "# need to max weight for the  ",
        "> ",
        "install.packages(\"lpSolve\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "library(lpSolve)",
        "> ",
        "install.packages(\"lpSolveAPI\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "library(lpSolveAPI)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "sharpe_ratio <- function(weight, st_dev, cor_ll, R_eturn, rf = 0){",
        "+ ",
        "  comb <- combinations(ncol(st_dev), 3, colnames(st_dev))",
        "+ ",
        "  e <- NULL",
        "+ ",
        "  f <- NULL",
        "+ ",
        "  ngy <- NULL",
        "+ ",
        "  names_cor <- NULL",
        "+ ",
        " ",
        "+ ",
        "  names_shrp <- NULL",
        "+ ",
        "  for (i in 1:nrow(comb)){",
        "+ ",
        "    sd_a <- st_dev[,comb[i,1]]",
        "+ ",
        "    sd_b <- st_dev[,comb[i,2]]",
        "+ ",
        "    sd_c <- st_dev[,comb[i,3]]",
        "+ ",
        "    weight_a <- weight[1]",
        "+ ",
        "    weight_b <- weight[2]",
        "+ ",
        "    weight_c <- weight[3]",
        "+ ",
        "    P_ab <- cor_ll[,paste(comb[i,1],comb[i,2])]",
        "+ ",
        "    P_ac <- cor_ll[,paste(comb[i,1],comb[i,3])]",
        "+ ",
        "    P_bc <- cor_ll[,paste(comb[i,2],comb[i,3])]",
        "+ ",
        "    var_portfolio <- (weight_a*weight_a*sd_a*sd_a)+(weight_b*weight_b*sd_b*sd_b)+(weight_c*weight_c*sd_c*sd_c)+(2*weight_a*weight_b*sd_a*sd_b*P_ab)+(2*weight_a*weight_c*sd_c*sd_a*P_ac)+(2*weight_b*weight_c*sd_c*sd_b*P_bc)",
        "+ ",
        "    R_eturn_a <- R_eturn[,comb[i,1]]",
        "+ ",
        "    R_eturn_b <- R_eturn[,comb[i,2]]",
        "+ ",
        "    R_eturn_c <- R_eturn[,comb[i,3]]",
        "+ ",
        "    ",
        "+ ",
        "    portfolio_return <- (R_eturn_a * weight_a)+ (R_eturn_b * weight_b)+(R_eturn_c*weight_c)",
        "+ ",
        "    Final_ratio <- (portfolio_return-rf)/sqrt(var_portfolio)",
        "+ ",
        "    e <- paste(comb[i,1],comb[i,2],comb[i,3])",
        "+ ",
        "    ngy <- cbind(ngy,i = Final_ratio)",
        "+ ",
        "    names_cor <- append(names_cor, e)",
        "+ ",
        "  ",
        "+ ",
        "  }",
        "+ ",
        "  colnames(ngy) <- names_cor",
        "+ ",
        "  return(ngy)",
        "+ ",
        "}",
        "> ",
        "FINAL <- sharpe_ratio(weight, sd, coor_value, R_Eturn)",
        "Error in combinations(ncol(st_dev), 3, colnames(st_dev)) : \n  too few different elements\n",
        "> ",
        "View(FINAL)",
        "\nRestarting R session...\n\n"
    ]
}